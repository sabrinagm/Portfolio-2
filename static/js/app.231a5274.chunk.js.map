{"version":3,"sources":["components/ToDoList.js","components/ImportantDates.js","components/NewUser.js","components/Login.js","App.js"],"names":["styles","StyleSheet","create","input","flex","flexDirection","justifyContent","height","borderWidth","borderStyle","title","fontSize","alignSelf","innerContainer","maxWidth","taskComplete","textDecorationLine","textDecorationStyle","container","backgroundColor","alignItems","marginTop","ToDoList","useState","inputText","setInputText","key","description","completed","tasks","setTasks","addTask","useCallback","keys","map","task","parseInt","maxKey","Math","max","newTask","toString","View","style","paddingBottom","value","onChangeText","onPress","FlatList","data","renderItem","item","currentTask","find","t","checked","textStyle","undefined","importantDatesInfo","date","info","DatesStyles","button","marginLeft","marginRight","welcomeMessage","alignContent","textAlign","marginBottom","ImportantDates","seeDates","setSeeDates","Text","id","formData","placeholder","label","regex","error","FormItem","formItem","setValid","setValue","infoError","setInfoError","TextInput","welcomeStyle","textInput","content","test","validate","errorMessage","NewUser","valid","form","setForm","initialButton","clickedButton","newValue","prevForm","Button","newUserButton","disabled","padding","color","loginStyles","loggedInMessage","Login","login","setLogin","passwordValue","setPasswordValue","errorText","setErrorText","user","setUser","loggingIn","setDate","useEffect","today","Date","getFullYear","getMonth","getDate","StatusBar","App"],"mappings":"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","file":"static/js/app.231a5274.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\nimport { FlatList, StyleSheet, Text, View } from 'react-native';\nimport { CheckBox, Input, Button } from 'react-native-elements';\n\nfunction ToDoList() {\n  let [inputText, setInputText] = useState(\"\")\n  let [tasks, setTasks] = useState([\n    {key:\"1\", \n    description: \"Art Project - April 25\",\n    completed: false\n    },\n    \n    {key:\"2\",\n    description: \"Final Exam - April 29\",\n    completed: false\n    },\n\n    {key:\"3\", \n    description: \"Design Project - April 30\",\n    completed: false\n    },\n\n    {key:\"4\",\n    description: \"Math Assignment - April 31\",\n    completed: false\n    }\n  ])\n\n  let addTask = useCallback(() => {\n    let keys = tasks.map(task => parseInt(task.key))\n    let maxKey = Math.max(...keys) + 1\n    let newTask = {description: inputText, completed: false, key: maxKey.toString}\n\n    setTasks([...tasks, newTask])\n    setInputText(\"\")\n  }, [inputText])\n\n  return (\n    <View style={styles.container}>\n\n      <View style={styles.innerContainer}>\n        <View styles={[{ height: 30, paddingBottom: 20 }, styles.input]}>\n          <Input value={inputText} onChangeText={setInputText} style={{ height: 30, paddingBottom: 20 }}></Input>\n          <Button title=\"Add\" onPress={addTask}></Button>\n        </View>\n        <FlatList data={tasks} renderItem={({ item: task }) =>\n          <CheckBox onPress={() => {\n            let currentTask = tasks.find(t=>t.key == task.key)\n            currentTask.completed = !currentTask.completed\n            setTasks([...tasks])\n          }}title={task.description} \n            key={task.key} \n            checked={task.completed}\n            textStyle={task.completed ? {\n              textDecorationLine:\"line-through\",\n              textDecorationStyle:\"solid\"\n            } :undefined}>\n            </CheckBox>\n        }/>\n      </View>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 10,\n    borderWidth: 2,\n    borderStyle: 'solid',\n  },\n  title: {\n    fontSize: 25,\n    alignSelf: \"center\"\n  },\n  innerContainer: {\n    maxWidth: 300,\n  },\n  taskComplete: {\n    textDecorationLine: 'line-through', \n    textDecorationStyle: 'solid'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: -20,\n  },\n});\n\nexport default ToDoList;","import { Button, SearchBar } from \"react-native-elements\";\nimport { useState } from 'react';\nimport { View, StyleSheet, Text } from \"react-native\";\n\nimport Login from \"./Login\";\n\nlet importantDatesInfo = [\n      {key:\"1\", \n      date: \"August 24\",\n      info: \"First Day of Classes\"\n      },\n      \n      {key:\"2\",\n      date: \"August 31\",\n      info: \"Drop/Add Deadline\"\n      },\n  \n      {key:\"3\", \n      date: \"August 31\",\n      info: \"Payment Deadline\"\n      },\n  \n      {key:\"4\",\n      date: \"December 20\",\n      info: \"Last Day of Classes\"\n      }\n];\n\nfunction ImportantDates() {\n    let [seeDates, setSeeDates] = useState(false)\n\n\n    return (\n        <View>\n        <Button style={DatesStyles.button} onPress={() => setSeeDates(!seeDates)} title=\"View Important Dates\"></Button>\n        {seeDates ?\n        (\n        <>\n            {importantDatesInfo.map(item => {\n                return (\n                    \n                    <View key={item.id}>\n                        <Text style={DatesStyles.welcomeMessage}>{item.info} - {item.date}</Text>\n                    </View>\n                )\n            })}\n        </>   \n        ) : null},\n        </View>\n    )\n}\n\nconst DatesStyles = StyleSheet.create({\n    button: {\n        marginLeft: 80,\n        marginRight: 80,\n        flex: 1,\n        marginTop: 200,\n    },\n    welcomeMessage: {\n        alignContent: 'center',\n        textAlign: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        marginTop: 15,\n        fontSize: 15,\n        marginBottom: 15,\n    },\n  });\n\n  export default ImportantDates;\n","\nimport { Text, TextInput, View, Button, StyleSheet } from \"react-native\";\nimport { useState } from 'react';\n\nlet formData= [\n   {placeholder: \"First Name\", label: \"firstName\", regex: /^[^\\d=?\\\\/@#%^&*()]+$/, error: \"Invalid name!\"},\n   {placeholder: \"Last Name\", label: \"lastName\", regex: /^[^\\d=?\\\\/@#%^&*()]+$/, error: \"Invalid name!\"},\n   {placeholder: \"Phone Number\", label: \"phone\", regex: /^\\(\\d{3}\\) \\d{3}-\\d{4}$/, error: \"Invalid phone number! Please enter in format (xxx) xxx-xxxx.\"},\n   {placeholder: \"Email\", label: \"email\", regex: /^.+@.+\\..+$/, error: \"Invalid email!\"},\n]\n\nfunction FormItem({ formItem, setValid, setValue }) {\n\n   let [infoError, setInfoError] = useState(\"\")\n\n   let validate = (content, setInfoError) => {\n      \n            if (formItem.regex.test(content) && formItem!=undefined && formItem!=\"\") {\n               setValue(content)\n               setValid(true)\n               setInfoError(\"\")\n            }\n            else {\n               setValid(false)\n               setInfoError(formItem.error)\n            }\n      }\n\n   return(<>\n   <TextInput style={welcomeStyle.textInput}\n   onChangeText={(value) => validate(value, setInfoError)} \n   placeholder={formItem.placeholder}>\n   </TextInput>\n   <Text style={welcomeStyle.errorMessage}>{infoError}</Text>\n   </>\n   )\n}\n\nexport default function NewUser() {\n   let [valid, setValid] = useState(false)\n   let [form, setForm] = useState({})\n\n   const [initialButton, clickedButton] = useState(\"Submit\")\n   const textChange = (text) => clickedButton(text);\n\n\n\n   return (\n      <View>\n         <Text style={welcomeStyle.welcomeMessage}>If you are a new user, please fill out form below!</Text>\n         {formData.map(formItem => {\n            return <FormItem setValue={(newValue=> {\n            setForm(prevForm => {\n               prevForm[formItem.label] = newValue\n               return { ...prevForm }\n            })\n         })}setValid={value=>setValid(value)} formItem={formItem} value={form[formItem.label]}></FormItem>\n         })}\n         <Button style={welcomeStyle.newUserButton} title={initialButton} onPress={() => textChange(`Thank you for joining!`)} disabled={!valid}></Button>\n      </View>\n   );\n}\n\nconst welcomeStyle = StyleSheet.create({\n   welcomeMessage: {\n       alignContent: 'center',\n       textAlign: 'center',\n       justifyContent: 'center',\n       flex: 1,\n       marginTop: 50,\n       fontSize: 15,\n       marginBottom: 15,\n   },\n   textInput: {\n     height: 40,\n     marginRight: 80,\n     marginLeft: 80,\n     marginTop: 10,\n     marginBottom: 10,\n     borderWidth: 1,\n     padding: 10,\n   },\n   newUserButton: {\n       marginLeft: 200,\n       marginRight: 200,\n   },\n   errorMessage: {\n      color: \"red\",\n      textAlign: \"center\",\n    },\n });","import { useCallback, useEffect, useState } from 'react';\nimport { Button } from 'react-native-elements';\nimport { Text, View, TextInput, StyleSheet } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\n\nimport ToDoList from './ToDoList';\nimport ImportantDates from './ImportantDates';\nimport NewUser from './NewUser';\n\nfunction Login() {\n    //Sets the login state.\n    let [login, setLogin] = useState(false)\n    //Sets the state of the password.\n    let [passwordValue, setPasswordValue] = useState(\"\")\n    //Sets the state of the password error text.\n    let [errorText, setErrorText] = useState(\"\")\n    //Sets and calls the username to the welcome message.\n    let [user, setUser] = useState(\"\");\n\n    let loggingIn = useCallback(() => {\n        //If the entered password is equal to \"4639\", the password is correct and setLogin is set to true and the entered username value is saved\n        if(passwordValue === \"4639\"){\n            setLogin(true)\n            user=setUser\n        }\n        //If the password is incorrect, instead the user recieves an error.\n        else{\n            setErrorText(\"That password was incorrect, try again! Hint: 4639\")\n        }\n    }, [passwordValue])\n\n    const [date, setDate] = useState(null)\n\n    useEffect(() => {\n      let today= new Date();\n      let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate(); \n      setDate(date);\n    }, []);\n\n    return(\n        login ?\n        <>\n        <View>\n        <Text style={loginStyles.loggedInMessage}>Welcome back, {user}! Happy studying!</Text>\n        <Text>{'Current Date'} - {date}</Text>\n        <ToDoList></ToDoList>\n        <ImportantDates></ImportantDates>\n        </View>\n        </>\n        :\n        <View>\n        <Text style={loginStyles.welcomeMessage}>Hello, please login below to access your study manager!</Text>\n        <TextInput style={loginStyles.input} placeholder=\"Username\" onChangeText={setUser}></TextInput>\n        <TextInput style={loginStyles.input} onChangeText={setPasswordValue} value={passwordValue} placeholder=\"Password\"></TextInput>\n        <Button style={loginStyles.button} title=\"Login\" onPress={loggingIn}></Button>\n        <Text style={loginStyles.error}>{errorText}</Text>\n        <NewUser></NewUser>\n        <StatusBar style=\"auto\" />\n      </View>\n    )\n}\n\nconst loginStyles = StyleSheet.create({\n    loggedInMessage: {\n        alignContent: 'center',\n        textAlign: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        marginTop: 10,\n        fontSize: 15,\n    },\n    welcomeMessage: {\n        alignContent: 'center',\n        textAlign: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        marginTop: 50,\n        fontSize: 15,\n        marginBottom: 15,\n    },\n    input: {\n      height: 40,\n      marginRight: 80,\n      marginLeft: 80,\n      marginTop: 10,\n      marginBottom: 10,\n      borderWidth: 1,\n      padding: 10,\n    },\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    error: {\n      color: \"red\",\n      textAlign: \"center\",\n    },\n    button: {\n        marginLeft: 200,\n        marginRight: 200,\n    }\n  });\n\nexport default Login","import Login from \"./components/Login\";\n\nexport default function App() {\n  return(\n<Login></Login>\n  )\n}\n\n"],"sourceRoot":""}