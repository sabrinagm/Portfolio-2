{"version":3,"sources":["ToDoList.js","Logout.js","Login.js","App.js"],"names":["styles","StyleSheet","create","input","flex","flexDirection","justifyContent","height","borderWidth","borderStyle","title","fontSize","alignSelf","innerContainer","maxWidth","taskComplete","textDecorationLine","textDecorationStyle","container","backgroundColor","alignItems","marginTop","ToDoList","useState","inputText","setInputText","key","description","completed","tasks","setTasks","addTask","useCallback","keys","map","task","parseInt","maxKey","Math","max","newTask","toString","View","style","paddingBottom","value","onChangeText","onPress","FlatList","data","renderItem","item","currentTask","find","t","checked","textStyle","undefined","logoutStyles","button","marginLeft","marginRight","Logout","logout","setLogout","loginStyles","loggedInMessage","alignContent","textAlign","welcomeMessage","marginBottom","padding","error","color","Login","login","setLogin","passwordValue","setPasswordValue","errorText","setErrorText","user","setUser","loggingIn","Text","TextInput","placeholder","StatusBar","App"],"mappings":"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","file":"static/js/app.b7e5441e.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\nimport { FlatList, StyleSheet, Text, View } from 'react-native';\nimport { CheckBox, Input, Button } from 'react-native-elements';\n\nfunction ToDoList() {\n  let [inputText, setInputText] = useState(\"\")\n  let [tasks, setTasks] = useState([\n    {key:\"1\", \n    description: \"Go grocery shopping\",\n    completed: true\n    },\n    \n    {key:\"2\",\n    description: \"Finish class project\",\n    completed: false\n    },\n\n    {key:\"3\", \n    description: \"Do laundry\",\n    completed: true\n    },\n\n    {key:\"4\",\n    description: \"Wash car\",\n    completed: false\n    }\n  ])\n\n  let addTask = useCallback(() => {\n    let keys = tasks.map(task => parseInt(task.key))\n    let maxKey = Math.max(...keys) + 1\n    let newTask = {description: inputText, completed: false, key: maxKey.toString}\n\n    setTasks([...tasks, newTask])\n    setInputText(\"\")\n  }, [inputText])\n\n  return (\n    <View style={styles.container}>\n\n      <View style={styles.innerContainer}>\n        <View styles={[{ height: 30, paddingBottom: 20 }, styles.input]}>\n          <Input value={inputText} onChangeText={setInputText} style={{ height: 30, paddingBottom: 20 }}></Input>\n          <Button title=\"Add\" onPress={addTask}></Button>\n        </View>\n        <FlatList data={tasks} renderItem={({ item: task }) =>\n          <CheckBox onPress={() => {\n            let currentTask = tasks.find(t=>t.key == task.key)\n            currentTask.completed = !currentTask.completed\n            setTasks([...tasks])\n          }}title={task.description} \n            key={task.key} \n            checked={task.completed}\n            textStyle={task.completed ? {\n              textDecorationLine:\"line-through\",\n              textDecorationStyle:\"solid\"\n            } :undefined}>\n            </CheckBox>\n        }/>\n      </View>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 10,\n    borderWidth: 2,\n    borderStyle: 'solid',\n  },\n  title: {\n    fontSize: 25,\n    alignSelf: \"center\"\n  },\n  innerContainer: {\n    maxWidth: 300,\n  },\n  taskComplete: {\n    textDecorationLine: 'line-through', \n    textDecorationStyle: 'solid'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: -20,\n  },\n});\n\nexport default ToDoList;","import { Button } from \"react-native-elements\";\nimport { useState } from 'react';\nimport { View, StyleSheet } from \"react-native\";\n\nimport Login from \"./Login\";\n\nfunction Logout() {\n    let [logout, setLogout] = useState(false)\n\n    if(logout == true) {\n        <View>\n            <Login></Login>\n        </View>\n    }\n\n    return (\n        <View>\n        <Button style={logoutStyles.button} onPress={() => setLogout(true)}  title=\"Exit Application\"></Button>\n        </View>\n    )\n}\n\nconst logoutStyles = StyleSheet.create({\n    button: {\n        marginLeft: 80,\n        marginRight: 80,\n        flex: 1,\n        marginTop: 200,\n    },\n  });\n\n  export default Logout;\n","import { useCallback, useState } from 'react';\nimport { Button } from 'react-native-elements';\nimport { Text, View, TextInput, StyleSheet } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\n\nimport ToDoList from './ToDoList';\nimport Logout from './Logout';\n\nfunction Login() {\n    //Sets the login state.\n    let [login, setLogin] = useState(false)\n    //Sets the state of the password.\n    let [passwordValue, setPasswordValue] = useState(\"\")\n    //Sets the state of the password error text.\n    let [errorText, setErrorText] = useState(\"\")\n    //Sets and calls the username to the welcome message.\n    let [user, setUser] = useState(\"\");\n\n    let loggingIn = useCallback(() => {\n        //If the entered password is equal to \"4639\", the password is correct and setLogin is set to true and the entered username value is saved\n        if(passwordValue === \"4639\"){\n            setLogin(true)\n            user=setUser\n        }\n        //If the password is incorrect, instead the user recieves an error.\n        else{\n            setErrorText(\"That password was incorrect, try again!\")\n        }\n    }, [passwordValue])\n\n    return(\n        login ?\n        <>\n        <View>\n        <Text style={loginStyles.loggedInMessage}>Welcome back to your to-do list, {user}!</Text>\n        <ToDoList></ToDoList>\n        <Logout></Logout>\n        </View>\n        </>\n        :\n        <View>\n        <Text style={loginStyles.welcomeMessage}>Hello, please login below!</Text>\n        <TextInput style={loginStyles.input} placeholder=\"Username\" onChangeText={setUser}></TextInput>\n        <TextInput style={loginStyles.input} onChangeText={setPasswordValue} value={passwordValue} placeholder=\"Password\"></TextInput>\n        <Button style={loginStyles.button} title=\"Login\" onPress={loggingIn}></Button>\n        <Text style={loginStyles.error}>{errorText}</Text>\n        <StatusBar style=\"auto\" />\n      </View>\n    )\n}\n\nconst loginStyles = StyleSheet.create({\n    loggedInMessage: {\n        alignContent: 'center',\n        textAlign: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        marginTop: 10,\n        fontSize: 15,\n    },\n    welcomeMessage: {\n        alignContent: 'center',\n        textAlign: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        marginTop: 10,\n        fontSize: 15,\n    },\n    input: {\n      height: 40,\n      marginRight: 80,\n      marginLeft: 80,\n      marginTop: 10,\n      marginBottom: 10,\n      borderWidth: 1,\n      padding: 10,\n    },\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    error: {\n      color: \"red\",\n    },\n    button: {\n        marginLeft: 80,\n        marginRight: 80,\n    }\n  });\n\nexport default Login","import Login from \"./Login\";\n\nexport default function App() {\n  return(\n    <Login></Login>\n  )\n}\n"],"sourceRoot":""}